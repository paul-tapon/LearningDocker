// <auto-generated />
using System;
using DOTR.QLess.Infrastructure.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DOTR.QLess.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(QLessDbContext))]
    partial class QLessDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DOTR.QLess.Domain.Entities.AppUser", b =>
                {
                    b.Property<int>("AppUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedByAppUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerUniqueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ForgotPasswordExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ForgotPasswordUrlParam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLocalNetworkUser")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedByAppUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PasswordSalt")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Qualifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AppUserId");

                    b.HasIndex("CreatedByAppUserId");

                    b.HasIndex("LastModifiedByAppUserId");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasFilter("[Username] IS NOT NULL");

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            AppUserId = 1,
                            CreatedDate = new DateTime(2021, 8, 31, 5, 41, 34, 680, DateTimeKind.Local).AddTicks(8492),
                            CustomerUniqueId = new Guid("8f563b98-6f6b-4579-b386-b8096b0adbbd"),
                            IsActive = true,
                            PasswordHash = "A553D8120F09422C8A640176970D7FB5767BB6EE31414146838873B4F9460554E5AD7B29FA70504EF322CAC81AF52A86CE82886B07E343FD5C6D13056506CABE",
                            PasswordSalt = "F6B8AFAE8D503045BBD69ADA97CD46E9BD465570B261673BE60EA5AE801E82492D07A6784EABEC7FECE2D65B51881374F7E681B271AD6400FACCD57C145EB14F",
                            Username = "sys.default"
                        });
                });

            modelBuilder.Entity("DOTR.QLess.Domain.Entities.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CreatedByAppUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedByAppUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUsedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TicketNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TicketTypeId")
                        .HasColumnType("int");

                    b.HasKey("TicketId");

                    b.HasIndex("CreatedByAppUserId");

                    b.HasIndex("LastModifiedByAppUserId");

                    b.HasIndex("TicketNumber")
                        .IsUnique()
                        .HasFilter("[TicketNumber] IS NOT NULL");

                    b.HasIndex("TicketTypeId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("DOTR.QLess.Domain.Entities.TicketNumberSeeder", b =>
                {
                    b.Property<int>("TicketNumberSeederId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("SeedValue")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("TicketNumberSeederId");

                    b.ToTable("TicketNumberSeeder");
                });

            modelBuilder.Entity("DOTR.QLess.Domain.Entities.TicketType", b =>
                {
                    b.Property<int>("TicketTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedByAppUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FixRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InitialLoad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedByAppUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TicketTypeId");

                    b.HasIndex("CreatedByAppUserId");

                    b.HasIndex("LastModifiedByAppUserId");

                    b.ToTable("TicketTypes");

                    b.HasData(
                        new
                        {
                            TicketTypeId = 1,
                            CreatedByAppUserId = 1,
                            CreatedDate = new DateTime(2021, 8, 31, 5, 41, 34, 682, DateTimeKind.Local).AddTicks(9639),
                            FixRate = 15m,
                            InitialLoad = 100m,
                            IsActive = true,
                            Name = "Regular"
                        },
                        new
                        {
                            TicketTypeId = 2,
                            CreatedByAppUserId = 1,
                            CreatedDate = new DateTime(2021, 8, 31, 5, 41, 34, 683, DateTimeKind.Local).AddTicks(448),
                            FixRate = 10m,
                            InitialLoad = 500m,
                            IsActive = true,
                            Name = "Discounted"
                        });
                });

            modelBuilder.Entity("DOTR.QLess.Domain.Entities.AppUser", b =>
                {
                    b.HasOne("DOTR.QLess.Domain.Entities.AppUser", "CreatedByAppUser")
                        .WithMany()
                        .HasForeignKey("CreatedByAppUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DOTR.QLess.Domain.Entities.AppUser", "LastModifiedByAppUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedByAppUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedByAppUser");

                    b.Navigation("LastModifiedByAppUser");
                });

            modelBuilder.Entity("DOTR.QLess.Domain.Entities.Ticket", b =>
                {
                    b.HasOne("DOTR.QLess.Domain.Entities.AppUser", "CreatedByAppUser")
                        .WithMany()
                        .HasForeignKey("CreatedByAppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DOTR.QLess.Domain.Entities.AppUser", "LastModifiedByAppUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedByAppUserId");

                    b.HasOne("DOTR.QLess.Domain.Entities.TicketType", "TicketType")
                        .WithMany()
                        .HasForeignKey("TicketTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedByAppUser");

                    b.Navigation("LastModifiedByAppUser");

                    b.Navigation("TicketType");
                });

            modelBuilder.Entity("DOTR.QLess.Domain.Entities.TicketType", b =>
                {
                    b.HasOne("DOTR.QLess.Domain.Entities.AppUser", "CreatedByAppUser")
                        .WithMany()
                        .HasForeignKey("CreatedByAppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DOTR.QLess.Domain.Entities.AppUser", "LastModifiedByAppUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedByAppUserId");

                    b.Navigation("CreatedByAppUser");

                    b.Navigation("LastModifiedByAppUser");
                });
#pragma warning restore 612, 618
        }
    }
}
